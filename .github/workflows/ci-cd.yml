name: NightVibe CI/CD

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Define environment variables needed for the build
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://user:password@localhost:5432/nightvibe_build' }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'build-only-secret-key-not-for-production-use-minimum-32-chars' }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL || 'http://localhost:3000' }}
      NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000' }}

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma Client
      run: npx prisma generate
      
    - name: Lint code
      run: npm run lint
      
    - name: Build application
      run: npm run build
      
    # Add test step when you have tests
    # - name: Run tests
    #   run: npm test

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check Vercel secrets
      id: check-secrets
      run: |
        if [ -z "${{ secrets.VERCEL_TOKEN }}" ] || [ -z "${{ secrets.VERCEL_ORG_ID }}" ] || [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
          echo "vercel_configured=false" >> $GITHUB_OUTPUT
          echo "⚠️ Vercel deployment secrets are not configured"
        else
          echo "vercel_configured=true" >> $GITHUB_OUTPUT
          echo "✅ Vercel deployment secrets are configured"
        fi
    
    - name: Deploy to Vercel
      if: steps.check-secrets.outputs.vercel_configured == 'true'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
    
    - name: Deployment Instructions
      if: steps.check-secrets.outputs.vercel_configured == 'false'
      run: |
        echo "🚀 BUILD SUCCESSFUL! 🎉"
        echo ""
        echo "To enable automatic deployment, add these secrets to your GitHub repository:"
        echo "1. Go to: Settings → Secrets and variables → Actions"
        echo "2. Add the following repository secrets:"
        echo "   - VERCEL_TOKEN: Your Vercel API token"
        echo "   - VERCEL_ORG_ID: Your Vercel organization ID"
        echo "   - VERCEL_PROJECT_ID: Your Vercel project ID"
        echo "   - DATABASE_URL: Your production database URL"
        echo "   - NEXTAUTH_SECRET: A secure random string (32+ characters)"
        echo "   - NEXTAUTH_URL: Your production URL (e.g., https://your-app.vercel.app)"
        echo "   - NEXT_PUBLIC_SITE_URL: Same as NEXTAUTH_URL"
        echo ""
        echo "📖 For detailed setup instructions, see: https://vercel.com/docs/concepts/git/vercel-for-github"
