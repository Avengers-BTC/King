'use client';

import { useParams } from 'next/navigation';
import { Star, Users, MapPin, Music, Instagram, Twitter, Facebook, Heart } from 'lucide-react';
import { Navbar } from '@/components/navbar';
import { Footer } from '@/components/footer';
import { GlowButton } from '@/components/ui/glow-button';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { toast } from 'sonner';
import { FanChat } from '@/components/fan-chat';
import { useState, useEffect } from 'react';

// Type definition for DJ data
interface DJ {
  id: string;
  userId: string;
  bio: string;
  genres: string[];
  rating: number;
  fans: number;
  events: Array<{
    id: string;
    name: string;
    date: string;
    club: {
      name: string;
      location: string;
    }
  }>;
  currentClub: string | null;
  instagram: string | null;
  twitter: string | null;
  facebook: string | null;
  user: {
    name: string | null;
    username: string | null;
    image: string | null;
    location: string | null;
  };
}

export default function DJProfilePage() {
  const params = useParams();
  const djId = params?.id as string;
  const [dj, setDj] = useState<DJ | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function loadDj() {
      try {
        setLoading(true);
        const response = await fetch(`/api/djs/${djId}`);
        
        if (!response.ok) {
          throw new Error(`Failed to fetch DJ: ${response.status}`);
        }
        
        const data = await response.json();
        setDj(data);
      } catch (error) {
        console.error('Error loading DJ:', error);
        setError('Could not load DJ profile. Please try again later.');
      } finally {
        setLoading(false);
      }
    }
    
    if (djId) {
      loadDj();
    }
  }, [djId]);

  if (loading) {
    return (
      <div className="min-h-screen bg-dark-bg">
        <Navbar />
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 text-center">
          <h1 className="text-2xl font-bold text-dark-text">Loading...</h1>
        </div>
        <Footer />
      </div>
    );
  }

  if (error || !dj) {
    return (
      <div className="min-h-screen bg-dark-bg">
        <Navbar />
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 text-center">
          <h1 className="text-2xl font-bold text-dark-text">DJ Not Found</h1>
          <p className="text-dark-text/70 mt-2">
            {error || "The DJ profile you're looking for doesn't exist."}
          </p>
        </div>
        <Footer />
      </div>
    );
  }

  const handleRank = () => {
    toast.success('Thanks for your rating! ðŸ”¥');
  };

  const handleFollow = () => {
    toast.success('You are now following this DJ! ðŸ’«');
  };

  // Format upcoming events from the events array
  const upcoming = dj.events?.map(event => ({
    event: event.name,
    venue: event.club.name,
    date: new Date(event.date).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    })
  })) || [];

  // Format socials object
  const socials = {
    instagram: dj.instagram,
    twitter: dj.twitter,
    facebook: dj.facebook
  };

  return (
    <div className="min-h-screen bg-dark-bg">
      <Navbar />
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Hero Section */}
        <div className="glass-card p-8 mb-8">
          <div className="flex flex-col lg:flex-row gap-8">
            {/* DJ Image */}
            <div className="flex-shrink-0">
              <div className="w-64 h-64 mx-auto lg:mx-0 rounded-xl overflow-hidden border-2 border-electric-pink/30">
                <img 
                  src={dj.user.image || '/images/default-avatar.png'} 
                  alt={dj.user.name || 'DJ'}
                  className="w-full h-full object-cover"
                />
              </div>
            </div>
            
            {/* DJ Info */}
            <div className="flex-1">
              <div className="flex items-start justify-between mb-4">
                <div>
                  <h1 className="text-4xl font-bold text-dark-text mb-2">{dj.user.name}</h1>
                  <p className="text-xl text-electric-pink mb-2">{dj.genres.join(' / ')}</p>
                  <div className="flex items-center space-x-4 text-dark-text/70">
                    <div className="flex items-center space-x-1">
                      <MapPin className="h-4 w-4" />
                      <span>{dj.user.location || 'Unknown location'}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <Users className="h-4 w-4" />
                      <span>{dj.fans?.toLocaleString() || 0} fans</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <Star className="h-4 w-4 text-yellow-400 fill-current" />
                      <span>{dj.rating || 0}</span>
                    </div>
                  </div>
                </div>
              </div>
              
              <p className="text-dark-text/80 mb-6 leading-relaxed">
                {dj.bio}
              </p>
              
              {dj.currentClub && (
                <div className="mb-6 p-4 bg-electric-pink/10 rounded-lg border border-electric-pink/30">
                  <div className="flex items-center space-x-2">
                    <Music className="h-5 w-5 text-electric-pink" />
                    <span className="text-dark-text">
                      Currently playing at <span className="text-electric-pink font-semibold">{dj.currentClub}</span>
                    </span>
                  </div>
                </div>
              )}
              
              <div className="flex flex-wrap gap-4">
                <GlowButton onClick={handleRank}>
                  ðŸ”¥ Rank This DJ
                </GlowButton>
                <Button 
                  variant="outline" 
                  onClick={handleFollow}
                  className="border-neon-cyan text-neon-cyan hover:bg-neon-cyan hover:text-dark-bg"
                >
                  <Heart className="h-4 w-4 mr-2" />
                  Follow
                </Button>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-8">
            {/* Upcoming Events */}
            <Card className="glass-card">
              <CardContent className="p-6">
                <h2 className="text-2xl font-bold text-dark-text mb-4">Upcoming Events</h2>
                {upcoming && upcoming.length > 0 ? (
                  <div className="space-y-4">
                    {upcoming.map((event, index) => (
                      <div key={index} className="flex justify-between items-center p-4 bg-dark-bg/50 rounded-lg">
                        <div>
                          <h3 className="font-semibold text-dark-text">{event.event}</h3>
                          <p className="text-sm text-dark-text/70">{event.venue}</p>
                        </div>
                        <div className="text-right">
                          <p className="text-sm text-electric-pink">{event.date}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <p className="text-dark-text/70">No upcoming events at the moment.</p>
                )}
              </CardContent>
            </Card>

            {/* Fan Comments Placeholder */}
            <Card className="glass-card">
              <CardContent className="p-6">
                <h2 className="text-2xl font-bold text-dark-text mb-4">Fan Comments</h2>
                <div className="space-y-4">
                  <div className="p-4 bg-dark-bg/50 rounded-lg">
                    <div className="flex items-center space-x-3 mb-2">
                      <div className="w-8 h-8 bg-electric-pink/20 rounded-full"></div>
                      <span className="font-medium text-dark-text">@music_lover</span>
                    </div>
                    <p className="text-dark-text/80">Absolutely incredible set last night! The energy was insane! ðŸ”¥</p>
                  </div>
                  <div className="p-4 bg-dark-bg/50 rounded-lg">
                    <div className="flex items-center space-x-3 mb-2">
                      <div className="w-8 h-8 bg-neon-cyan/20 rounded-full"></div>
                      <span className="font-medium text-dark-text">@dancefever</span>
                    </div>
                    <p className="text-dark-text/80">Amazing performance! Can't wait for the next show! ðŸ’«</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Social Links */}
            <Card className="glass-card">
              <CardContent className="p-6">
                <h3 className="text-lg font-bold text-dark-text mb-4">Connect</h3>
                {(socials.instagram || socials.twitter || socials.facebook) ? (
                  <div className="space-y-3">
                    {socials.instagram && (
                      <a href={`https://instagram.com/${socials.instagram.replace('@', '')}`} target="_blank" rel="noopener noreferrer" className="flex items-center space-x-3 text-dark-text/70 hover:text-electric-pink transition-colors">
                        <Instagram className="h-5 w-5" />
                        <span>{socials.instagram}</span>
                      </a>
                    )}
                    {socials.twitter && (
                      <a href={`https://twitter.com/${socials.twitter.replace('@', '')}`} target="_blank" rel="noopener noreferrer" className="flex items-center space-x-3 text-dark-text/70 hover:text-electric-pink transition-colors">
                        <Twitter className="h-5 w-5" />
                        <span>{socials.twitter}</span>
                      </a>
                    )}
                    {socials.facebook && (
                      <a href={`https://facebook.com/${socials.facebook}`} target="_blank" rel="noopener noreferrer" className="flex items-center space-x-3 text-dark-text/70 hover:text-electric-pink transition-colors">
                        <Facebook className="h-5 w-5" />
                        <span>{socials.facebook}</span>
                      </a>
                    )}
                  </div>
                ) : (
                  <p className="text-dark-text/70">No social links available.</p>
                )}
              </CardContent>
            </Card>

            {/* Stats */}
            <Card className="glass-card">
              <CardContent className="p-6">
                <h3 className="text-lg font-bold text-dark-text mb-4">Stats</h3>
                <div className="space-y-3">
                  <div className="flex justify-between">
                    <span className="text-dark-text/70">Total Fans</span>
                    <span className="text-electric-pink font-semibold">{dj.fans?.toLocaleString() || 0}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-dark-text/70">Rating</span>
                    <span className="text-electric-pink font-semibold">{dj.rating || 0}/5</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-dark-text/70">Rank</span>
                    <span className="text-electric-pink font-semibold">#3</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>

      {/* Fan Chat Section */}
      <div className="mt-8">
        <FanChat
          djId={dj.userId}
          djName={dj.user.name || 'DJ'}
        />
      </div>

      <Footer />
    </div>
  );
}
